#使用sliding window + hashmap

class Solution(object):
    def lengthOfLongestSubstring(self, s):
        """
        :type s: str
        :rtype: int
        """
        if not s: return 0
        
        hashmap = {}
        
        start, end, k = 0, 0, 0
        for end in range(len(s)):
            if s[end] in hashmap:
                start = max(start, hashmap[s[end]] + 1)
            hashmap[s[end]] = end
            k = max(k,end - start + 1)
    
        return k
            
#使用虫取法 + set

class Solution:
    def lengthOfLongestSubstring(self, s):
        
        ans, l, check = 0, 0, set()
        
        for i in range(len(s)):
            
            if s[i] in check:
                while l<i and s[i] in check:
                    check.discard(s[l])
                    l+=1

            check.add(s[i])

            ans=max(ans,len(check))
        
        return ans
